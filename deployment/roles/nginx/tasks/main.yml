---
 - name: ensure nginx requirements
   apt: pkg={{ item }} state=latest install_recommends=no
   with_items: "{{ nginx.dependencies }}"
   tags: [nginx, packages]

 - name: ensure nginx keys
   apt_key: data="{{ item }}" state=present
   with_file:
     - nginx.gpg
   tags: nginx

 - name: ensure nginx repo
   apt_repository: repo="{{ item }}" state=present update_cache=yes
   with_items:
     - "deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx"
     - "deb-src http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx"
   tags: [nginx, packages]

 - name: ensure nginx package
   apt: pkg={{ item }} state=latest install_recommends=no
   with_items:
     - nginx
   tags: [nginx, packages]

 - name: ensure nginx configurations
   template: src={{ item }} dest=/etc/nginx/{{ item }} owner=root group=root mode=0644
   with_items:
     - nginx.conf
     - ssl.conf
     - proxy.conf
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure nginx ssl location
   file: path=/etc/nginx/ssl owner=root group=root mode=0755 state=directory
   tags: nginx

 - name: ensure nginx root location
   file: path={{ item.path }} owner=nginx group=root mode=0755 state=directory
   with_items: "{{ nginx.vhosts }}"
   tags: nginx

 - name: ensure nginx default configuration absent
   file: path=/etc/nginx/conf.d/{{ item }} state=absent
   with_items:
     - default.conf
     - example_ssl.conf
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure default ssl certificates and keys
   copy: src="{{ private_dir }}/files/nginx/{{ item }}" dest=/etc/nginx/ssl/{{ item }} owner=root group=root mode=0600
   notify: reload nginx
   when: nginx.default.ssl is defined and nginx.default.ssl
   with_items:
     - default.pem
     - default.key
   tags: nginx

 - name: ensure default nginx vhost configuration
   template: src=000-default dest=/etc/nginx/conf.d/000-default.conf owner=root group=root mode=0644
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure vhost ssl certificates
   copy: src="{{ item.ssl.cert }}" dest=/etc/nginx/ssl/{{ item.name }}.pem owner=root group=root mode=0600
   when: item.ssl is defined and item.ssl
   with_items: "{{ nginx.vhosts }}"
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure vhost ssl keys
   copy: src="{{ item.ssl.key }}" dest=/etc/nginx/ssl/{{ item.name }}.key owner=root group=root mode=0600
   when: item.ssl is defined and item.ssl
   with_items: "{{ nginx.vhosts }}"
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure vhost ssl dhparams
   command: openssl dhparam -out /etc/nginx/ssl/{{ item.name }}_dhparam.pem 2048 creates=/etc/nginx/ssl/{{ item.name }}_dhparam.pem
   when: item.ssl is defined and item.ssl
   with_items: "{{ nginx.vhosts }}"
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx

 - name: ensure vhost configurations
   template: src=vhost dest=/etc/nginx/conf.d/{{ "%03d-%s"|format(item.0 + 1, item.1.name) }}.conf owner=root group=root mode=0644
   with_indexed_items: "{{ nginx.vhosts }}"
   notify:
     - validate nginx configuration
     - reload nginx
   tags: nginx
